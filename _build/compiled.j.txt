// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-925
globals
rect w=null
sound u=null
sound r=null
sound s=null
sound t=null
sound i=null
sound S=null
sound c=null
sound o=null
sound O=null
sound l=null
sound b=null
sound y=null
sound p=null
sound e=null
sound q=null
sound a=null
sound n=null
sound d=null
leaderboard f=null
group R=null
integer array T
integer Y=0
filterfunc G=null
integer g=0
integer array h
timer array F
timer array k
timer array j
string array x
integer v=0
hashtable m=null
unit array Q
real array W
real array E
unit array Z
real array U
real array I
effect array P
unit array A
unit array D
effect array H
unit array J
effect array K
real array L
unit array X
boolean array C
timer V=null
real B=0.
group N=null
group M=null
hashtable ww=null
hashtable uw=null
integer array rw
integer array sw
real tw=0.
real iw=0.
unit array Sw
integer array cw
unit ow=null
player Ow=null
player array lw
player bw=null
trigger array yw
integer pw=0
sound ew=null
unit array qw
player array aw
unit array nw
real array dw
real array fw
integer array Rw
unit array Tw
unit array Yw
player array Gw
unit array gw
real array hw
real array Fw
group kw=null
integer jw=0
unit array xw
unit array vw
unit array mw
player array Qw
unit array Ww
real array Ew
unit array Zw
unit array Uw
player array Iw
real array Pw
real array Aw
unit array Dw
real array Hw
unit array Jw
player array Kw
unit array Lw
real array Xw
unit array Cw
unit array Vw
sound array Bw
sound array Nw
group Mw=null
unit array wu
real array uu
real array ru
unit array su
real array tu
real array iu
integer Su=0
player array cu
unit array ou
player array Ou
integer array lu
player array bu
real array yu
real array pu
unit array eu
unit array qu
real array au
unit array nu
player array du
group array fu
unit array Ru
real array Tu
unit array Yu
integer array Gu
real array gu
real array hu
real array Fu
real array ku
integer array ju
unit array xu
integer array vu
real array mu
real array Qu
real array Wu
real array Eu
integer array Zu
sound array Uu
sound array Iu
integer Pu=0
player array Au
integer array Du
player array Hu
unit array Ju
real array Ku
unit array Lu
player array Xu
unit array Cu
real array Vu
sound array Bu
sound array Nu
unit array Mu
integer wr=0
unit array ur
real array rr
unit array sr
effect array tr
sound array ir
sound Sr=null
unit array cr
unit array lr
unit array br
unit array yr
real array pr
player array er
unit array qr
unit array ar
effect array nr
real array dr
real array fr
unit array Rr
unit array Tr
unit array Yr
player array Gr
real array gr
real array hr
real array Fr
real array kr
effect array jr
unit array xr
unit array vr
real array mr
real array Qr
unit array Wr
player array Er
real array Zr
real array Ur
unit array Ir
player array Pr
real array Ar
sound Dr=null
effect array Hr
unit array Jr
effect array Kr
integer array Lr
player array Xr
group array Cr
unit array Vr
real array Br
player array Nr
group array Mr
unit array ws
real array us
unit array rs
player array ss
group array ts
unit array is
real array Ss
integer cs=0
unit array os
unit array Os
group array ls
player array bs
group array ys
unit array ps
player array es
group array qs
group array as
group array ns
unit array ds
real array fs
group array Rs
integer array Ts
unit array Ys
group array Gs
real array gs
group array hs
unit array Fs
integer array ks
unit array js
group array xs
real array vs
group array ms
sound array Qs
sound array Ws
integer Es=0
unit array Zs
unit array Us
unit array Is
effect array Ps
real array As
unit array Ds
unit array Hs
effect array Js
real array Ks
sound array Ls
hashtable Xs=null
timer array Cs
integer Vs=0
integer Bs=0
integer Ns=0
integer array Ms
integer wt=0
integer ut=0
integer array rt
integer array st
integer tt=0
integer St=0
integer array ct
integer array ot
integer Ot=0
integer lt=0
integer array bt
integer array yt
integer pt=0
integer et=0
integer array qt
integer array at
integer nt=0
integer dt=0
integer array ft
integer array Rt
integer Tt=0
integer Yt=0
integer array Gt
integer gt=0
integer ht=0
integer array Ft
integer kt=0
integer jt=0
integer array xt
integer vt=0
integer mt=0
integer array Qt
integer Wt=0
integer Et=0
integer array Zt
integer Ut=0
integer It=0
real Pt=0.
real At=0.
real Dt=0.
real Ht=0.
code Jt=null
code Kt=null
code Lt=null
code Xt=null
code Ct=null
code Vt=null
code Bt=null
code Nt=null
code Mt=null
code wi=null
code ui=null
code ri=null
code si=null
code ti=null
code ii=null
code Si=null
code ci=null
code oi=null
code Oi=null
code li=null
code bi=null
code yi=null
code pi=null
code ei=null
code qi=null
code ai=null
code ni=null
code di=null
code fi=null
code Ri=null
code Ti=null
code Yi=null
code Gi=null
code gi=null
code hi=null
code Fi=null
code ki=null
code ji=null
code xi=null
code vi=null
code mi=null
code Qi=null
code Wi=null
code Ei=null
code Zi=null
code Ui=null
code Ii=null
code Pi=null
code Ai=null
code Di=null
code Hi=null
unit Ji=null
timer Ki=null
endglobals
native UnitAlive takes unit id returns boolean
function vo takes integer xo returns string
if xo==0 then
return "|cffADADADtrace|r"
elseif xo==1 then
return "|cff2685DCdebug|r"
elseif xo==2 then
return "|cffFFCC00info|r"
elseif xo==3 then
return "|cffF47E3Ewarning|r"
elseif xo==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function kc takes string hc returns nothing
local integer Fc=StringHash(hc)
if HaveSavedInteger(m,-1,Fc) then
if LoadInteger(m,-1,Fc)+60<B then
set hc=hc+""
call DisplayTimedTextToPlayer(bw,0.,0.,45.,vo(4)+" - "+hc)
call SaveInteger(m,-1,Fc,R2I(B))
call SaveBoolean(m,-1,Fc,false)
elseif HaveSavedBoolean(m,-1,Fc) then
if not LoadBoolean(m,-1,Fc) then
call DisplayTimedTextToPlayer(bw,0.,0.,45.,vo(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(m,-1,Fc,true)
endif
else
call DisplayTimedTextToPlayer(bw,0.,0.,45.,vo(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(m,-1,Fc,true)
endif
else
call SaveInteger(m,-1,Fc,R2I(B))
set hc="|cffFF3A29Error:|r "+hc+""
call DisplayTimedTextToPlayer(bw,0.,0.,45.,vo(4)+" - "+hc)
endif
call I2S(1/0)
endfunction
function Pl takes nothing returns integer
local integer Il
if nt==0 then
if dt<32768 then
set dt=dt+1
set Il=dt
set ft[Il]=86
else
call kc("Out of memory: Could not create Table.")
set Il=0
endif
else
set nt=nt-1
set Il=at[nt]
set ft[Il]=86
endif
return Il
endfunction
function Al takes nothing returns boolean
set Bs=Pl()
call CreateTimer()
call CreateTrigger()
return true
endfunction
function Bi takes nothing returns nothing
local integer Xi=0
local real Vi=0.
local location array Ci
loop
exitwhen Xi>=50
set Xi=Xi+1
set Ci[Xi]=Location(0.,0.)
set Vi=Vi+(GetHandleId(Ci[Xi])-1048576)
endloop
set Vi=Vi/Xi-Xi/2
loop
call RemoveLocation(Ci[Xi])
set Ci[Xi]=null
exitwhen Xi<=1
set Xi=Xi-1
endloop
call LeaderboardSetItemValue(f,0,R2I(Vi))
endfunction
function Cl takes nothing returns boolean
set Ns=Pl()
call SaveStr(Xs,Ns,0,"")
return true
endfunction
function El takes nothing returns boolean
local integer Wl
if Ut==0 then
if It<32768 then
set It=It+1
set Wl=It
else
call kc("Out of memory: Could not create Spell.")
set Wl=0
endif
else
set Ut=Ut-1
set Wl=Zt[Ut]
endif
set Ls[Wl]=o
set Es=Wl
return true
endfunction
function FS takes nothing returns boolean
set g=200
return true
endfunction
function Fo takes nothing returns boolean
local integer go
local integer ho
set bw=GetLocalPlayer()
set go=0
set ho=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen go>ho
set lw[go]=Player(go)
set go=go+1
endloop
return true
endfunction
function Go takes nothing returns boolean
return true
endfunction
function Jo takes nothing returns boolean
local playerunitevent Qo
local playerunitevent Wo
local code Eo
local code Zo
local code Uo
local integer Io
local integer Po
local filterfunc Ao
local trigger Do
local player Ho
if nt==0 then
if dt<32768 then
set dt=dt+1
set Po=dt
set ft[Po]=87
else
call kc("Out of memory: Could not create HashMap.")
set Po=0
endif
else
set nt=nt-1
set Po=at[nt]
set ft[Po]=87
endif
set pw=Po
set Qo=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Wo=Qo
set Eo=null
set Zo=Wi
set Uo=null
set Io=GetHandleId(Qo)
if yw[Io]==null then
set yw[Io]=CreateTrigger()
set Po=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Po<0
set Do=yw[Io]
set Ho=lw[Po]
if Eo!=null then
set Ao=Filter(Eo)
else
set Ao=null
endif
call TriggerRegisterPlayerUnitEvent(Do,Ho,Wo,Ao)
set Po=Po-1
endloop
endif
if Zo!=null then
call TriggerAddCondition(yw[Io],Filter(Zo))
endif
if Uo!=null then
call TriggerAddAction(yw[Io],Uo)
endif
set Qo=null
set Wo=null
set Ao=null
set Do=null
set Ho=null
return true
endfunction
function Nl takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function Gc takes string Rc,real Tc,real Yc returns nothing
call DestroyEffect(AddSpecialEffect(Rc,Tc,Yc))
endfunction
function Qb takes integer xb,integer vb,integer mb returns nothing
call SaveInteger(Xs,xb,vb,mb)
endfunction
function Kl takes nothing returns timer
local timer Jl
if Vs>0 then
set Vs=Vs-1
set Jl=Cs[Vs]
call Qb(Bs,GetHandleId(Jl),0)
set Jl=null
return Cs[Vs]
else
set Jl=CreateTimer()
call Qb(Bs,GetHandleId(Jl),0)
set Ki=Jl
set Jl=null
return Ki
endif
endfunction
function ES takes integer mS,real QS,integer WS returns nothing
set F[mS]=Kl()
call Qb(Bs,GetHandleId(F[mS]),mS)
set h[mS]=WS
call TimerStart(F[mS],QS,true,xi)
endfunction
function vS takes real kS,real jS,integer xS returns integer
call ES(xS,kS,R2I(jS/kS+0.5))
return xS
endfunction
function Ol takes nothing returns nothing
local unit il=GetTriggerUnit()
local real Sl
local player cl
local integer ol
if GetUnitAbilityLevel(il,1144009011)>0 then
set Sl=0.2*GetUnitAbilityLevel(il,1144008757)*GetHeroInt(il,true)
set cl=GetOwningPlayer(il)
call StartSound(Sr)
call UnitRemoveAbility(il,1144009011)
call Gc("DustWave.mdx",GetUnitX(il),GetUnitY(il))
if Ot==0 then
if lt<32768 then
set lt=lt+1
set ol=lt
set bt[ol]=17
else
call kc("Out of memory: Could not create Closure.")
set ol=0
endif
else
set Ot=Ot-1
set ol=ot[Ot]
set bt[ol]=17
endif
set h[ol]=0
set Ir[ol]=il
set Pr[ol]=cl
set Ar[ol]=Sl
call vS(0.01,0.3,ol)
endif
set il=null
set cl=null
endfunction
function Ql takes nothing returns boolean
local integer ml
if Wt==0 then
if Et<32768 then
set Et=Et+1
set ml=Et
else
call kc("Out of memory: Could not create Spell.")
set ml=0
endif
else
set Wt=Wt-1
set ml=Qt[Wt]
endif
set Qs[ml]=i
set Ws[ml]=S
set cs=ml
return true
endfunction
function Ro takes nothing returns boolean
return true
endfunction
function SS takes nothing returns boolean
set R=CreateGroup()
set G=Filter(ji)
return true
endfunction
function To takes nothing returns boolean
return true
endfunction
function Ul takes nothing returns boolean
set Xs=InitHashtable()
return true
endfunction
function tb takes real Ml,real wb,real ub,real rb returns real
local real sb=Cos(ub)*rb
set ub=Sin(ub)*rb
set Dt=Ml+sb
set Ht=wb+ub
return Dt
endfunction
function Ac takes unit Uc,real Ic returns nothing
local real Pc=GetUnitX(Uc)
set Ic=tb(Pc,GetUnitY(Uc),GetUnitFacing(Uc)*0.017453293,Ic)
set Pc=Ht
call SetUnitPosition(Uc,Ic,Pc)
endfunction
function Hl takes timer Dl returns integer
return LoadInteger(Xs,Bs,GetHandleId(Dl))
endfunction
function Kc takes unit Dc,real Hc,real Jc returns real
set Pt=tb(GetUnitX(Dc),GetUnitY(Dc),Jc*0.017453293,Hc)
set At=Ht
return Pt
endfunction
function Zc takes unit Qc,real Wc,real Ec returns real
return 57.295779513*Atan2(Ec-GetUnitY(Qc),Wc-GetUnitX(Qc))
endfunction
function KO takes integer vO,unit mO,real QO,real WO,real EO,real ZO,player UO,integer IO returns nothing
local real PO=GetRandomReal(-30.,30.)
local unit AO
local group DO
local integer HO
local integer JO
set PO=Zc(mO,QO,WO)+PO
set AO=CreateUnit(UO,1697656888,Kc(mO,100.,PO),At,PO)
set DO=CreateGroup()
if Ot==0 then
if lt<32768 then
set lt=lt+1
set HO=lt
set bt[HO]=14
else
call kc("Out of memory: Could not create Closure.")
set HO=0
endif
else
set Ot=Ot-1
set HO=ot[Ot]
set bt[HO]=14
endif
set h[HO]=0
set nu[HO]=AO
set du[HO]=UO
set fu[HO]=DO
set Ru[HO]=mO
set Tu[HO]=EO
set JO=R2I(ZO/0.025+0.5)
set F[HO]=Kl()
call Qb(Bs,GetHandleId(F[HO]),HO)
set h[HO]=JO
call TimerStart(F[HO],0.025,true,xi)
if IO>0 then
call KO(vO,mO,QO,WO,EO,ZO,UO,IO-1)
endif
set AO=null
set DO=null
endfunction
function Sc takes integer sc,real tc returns nothing
local timer ic=Kl()
call Qb(Bs,GetHandleId(ic),sc)
call TimerStart(ic,tc,false,mi)
set j[sc]=ic
set ic=null
endfunction
function Xl takes timer Ll returns nothing
if Ll==null then
call kc("Trying to release a null timer")
return
endif
if Hl(Ll)==679645218 then
call kc("ReleaseTimer: Double free!")
return
endif
call Qb(Bs,GetHandleId(Ll),679645218)
call PauseTimer(Ll)
set Cs[Vs]=Ll
set Vs=Vs+1
endfunction
function OS takes nothing returns nothing
local integer oS
call GroupClear(R)
set Y=Y-1
set oS=T[Y]
if rt[oS]==0 then
call kc("Double free: object of type ForGroupCallback")
else
set Ms[wt]=oS
set wt=wt+1
set rt[oS]=0
endif
endfunction
function eS takes real lS,real bS,real yS,integer pS returns nothing
set T[Y]=pS
set Y=Y+1
call GroupEnumUnitsInRange(R,lS,bS,yS,G)
call OS()
endfunction
function mc takes unit xc,unit vc returns real
return 57.295779513*Atan2(GetUnitY(vc)-GetUnitY(xc),GetUnitX(vc)-GetUnitX(xc))
endfunction
function nl takes unit bl,unit yl,group pl,real el returns nothing
local effect ql
local integer al
call GroupAddUnit(pl,yl)
set ql=AddSpecialEffectTarget("Chirodri.mdx",yl,"chest")
call UnitDamageTarget(bl,yl,el,false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
call UnitAddAbility(yl,1144008758)
call SetPlayerAbilityAvailable(GetOwningPlayer(yl),1144008758,false)
if tt==0 then
if St<32768 then
set St=St+1
set al=St
set ct[al]=48
else
call kc("Out of memory: Could not create Closure.")
set al=0
endif
else
set tt=tt-1
set al=st[tt]
set ct[al]=48
endif
set Jr[al]=yl
set Kr[al]=ql
call Sc(al,4.)
set ql=null
endfunction
function wo takes unit Lc,real Xc,string Cc,string Vc returns nothing
local effect Bc=AddSpecialEffectTarget(Cc,Lc,Vc)
local integer Nc
local integer Mc
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Nc=lt
set bt[Nc]=6
else
call kc("Out of memory: Could not create Closure.")
set Nc=0
endif
else
set Ot=Ot-1
set Nc=ot[Ot]
set bt[Nc]=6
endif
set h[Nc]=0
set J[Nc]=Lc
set K[Nc]=Bc
set Mc=R2I(Xc/0.01+0.5)
set F[Nc]=Kl()
call Qb(Bs,GetHandleId(F[Nc]),Nc)
set h[Nc]=Mc
call TimerStart(F[Nc],0.01,true,xi)
set Bc=null
endfunction
function nb takes integer Ob,unit lb returns nothing
local effect bb
local integer yb
local integer pb
local unit eb
local boolean qb
local real ab
if rt[Ob]<=59 then
if rt[Ob]<=56 then
if rt[Ob]<=54 then
if rt[Ob]<=53 then
if not IsUnitAlly(lb,aw[Ob]) then
set qb=UnitAlive(lb)
else
set qb=false
endif
if qb then
call UnitDamageTarget(nw[Ob],lb,dw[Ob],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
call Gc("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl",GetUnitX(lb),GetUnitY(lb))
call GroupAddUnit(Mw,lb)
set ab=fw[Ob]
if tt==0 then
if St<32768 then
set St=St+1
set yb=St
set ct[yb]=36
else
call kc("Out of memory: Could not create Closure.")
set yb=0
endif
else
set tt=tt-1
set yb=st[tt]
set ct[yb]=36
endif
set qw[yb]=lb
call Sc(yb,ab)
set ab=fw[Ob]
set bb=AddSpecialEffectTarget("Bakudo61.mdx",lb,"chest")
if Ot==0 then
if lt<32768 then
set lt=lt+1
set yb=lt
set bt[yb]=5
else
call kc("Out of memory: Could not create Closure.")
set yb=0
endif
else
set Ot=Ot-1
set yb=ot[Ot]
set bt[yb]=5
endif
set h[yb]=0
set D[yb]=lb
set H[yb]=bb
set pb=R2I(ab/0.01+0.5)
set F[yb]=Kl()
call Qb(Bs,GetHandleId(F[yb]),yb)
set h[yb]=pb
call TimerStart(F[yb],0.01,true,xi)
set Ob=Rw[Ob]
set h[Ob]=1
endif
elseif UnitAlive(lb) and(not IsUnitAlly(lb,Qw[Ob])) then
call UnitDamageTarget(Ww[Ob],lb,Ew[Ob],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
call GroupAddUnit(kw,lb)
call wo(lb,3.,"iceflower.mdx","origin")
if tt==0 then
if St<32768 then
set St=St+1
set Ob=St
set ct[Ob]=39
else
call kc("Out of memory: Could not create Closure.")
set Ob=0
endif
else
set tt=tt-1
set Ob=st[tt]
set ct[Ob]=39
endif
set mw[Ob]=lb
call Sc(Ob,3.)
endif
elseif rt[Ob]<=55 then
if UnitAlive(lb) and(not IsUnitAlly(lb,Kw[Ob])) then
call UnitDamageTarget(Lw[Ob],lb,Xw[Ob],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
call wo(lb,3.,"iceflower.mdx","origin")
call GroupAddUnit(kw,lb)
if tt==0 then
if St<32768 then
set St=St+1
set Ob=St
set ct[Ob]=41
else
call kc("Out of memory: Could not create Closure.")
set Ob=0
endif
else
set tt=tt-1
set Ob=st[tt]
set ct[Ob]=41
endif
set Jw[Ob]=lb
call Sc(Ob,3.)
endif
else
if not IsUnitAlly(lb,Au[Ob]) then
set qb=UnitAlive(lb)
else
set qb=false
endif
if qb then
set Ob=Du[Ob]
set h[Ob]=1
endif
endif
elseif rt[Ob]<=58 then
if rt[Ob]<=57 then
if IsUnitEnemy(lb,Hu[Ob]) then
set qb=UnitAlive(lb)
else
set qb=false
endif
if qb then
call UnitDamageTarget(Ju[Ob],lb,Ku[Ob],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
endif
elseif UnitAlive(lb) and IsUnitEnemy(lb,cu[Ob]) then
call SetUnitFacingTimed(ou[Ob],mc(ou[Ob],lb),0.5)
endif
elseif UnitAlive(lb) and IsUnitEnemy(lb,Ou[Ob]) then
set Ob=lu[Ob]
set h[Ob]=1
endif
elseif rt[Ob]<=62 then
if rt[Ob]<=61 then
if rt[Ob]<=60 then
if UnitAlive(lb) and IsUnitEnemy(lb,bu[Ob]) then
set ab=pu[Ob]
set eb=CreateUnit(bu[Ob],1697656880,yu[Ob],ab,GetUnitFacing(eu[Ob])*0.017453293*57.295779513)
call SetUnitScale(eb,0.22,0.22,0.22)
call KillUnit(eb)
call UnitDamageTarget(qu[Ob],lb,au[Ob],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
call IssueImmediateOrderById(lb,851973)
endif
elseif UnitAlive(lb) then
if lb!=yr[Ob]then
call Gc("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl",GetUnitX(lb),GetUnitY(lb))
call UnitDamageTarget(yr[Ob],lb,pr[Ob],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
call IssueImmediateOrderById(lb,851973)
else
call UnitDamageTarget(yr[Ob],yr[Ob],pr[Ob]/3,false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
endif
endif
elseif UnitAlive(lb) and IsUnitEnemy(lb,er[Ob]) then
call wo(lb,6.,"Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl","origin")
endif
elseif rt[Ob]<=64 then
if rt[Ob]<=63 then
if GetUnitTypeId(lb)==1697656887 then
call KillUnit(lb)
set yb=Lr[Ob]
set h[yb]=1
endif
if UnitAlive(lb) and IsUnitEnemy(lb,Xr[Ob]) then
set qb=not IsUnitInGroup(lb,Cr[Ob])
else
set qb=false
endif
if qb then
call nl(Vr[Ob],lb,Cr[Ob],Br[Ob])
endif
else
if UnitAlive(lb) and IsUnitEnemy(lb,Nr[Ob]) then
set qb=not IsUnitInGroup(lb,Mr[Ob])
else
set qb=false
endif
if qb then
call nl(ws[Ob],lb,Mr[Ob],us[Ob])
endif
endif
else
if UnitAlive(lb) and IsUnitEnemy(lb,bs[Ob]) then
set qb=not IsUnitInGroup(lb,ys[Ob])
else
set qb=false
endif
if qb then
call GroupAddUnit(ys[Ob],lb)
endif
endif
set bb=null
set eb=null
endfunction
function hS takes real qS,real aS,real nS,filterfunc dS,integer fS returns nothing
local unit RS
local group TS
local unit YS
local real GS
local real gS
set T[Y]=fS
set Y=Y+1
call GroupEnumUnitsInRange(N,qS,aS,nS,dS)
set RS=null
set nS=340282366920938000000000000000000000000.
set TS=N
loop
exitwhen FirstOfGroup(TS)==null
set YS=FirstOfGroup(TS)
call GroupRemoveUnit(TS,YS)
set GS=GetUnitX(YS)
set gS=GetUnitY(YS)
set GS=GS-qS
set gS=gS-aS
set gS=GS*GS+gS*gS
if gS<nS then
set RS=YS
set nS=gS
endif
endloop
call nb(fS,RS)
call OS()
set RS=null
set TS=null
set YS=null
endfunction
function jb takes integer db,unit fb,real Rb,real Tb,boolean Yb returns nothing
local integer Fb=GetUnitAbilityLevel(fb,1144008753)
local real Gb=Fb*20.+Fb*GetHeroInt(fb,true)
local player gb=GetOwningPlayer(fb)
local unit hb
local real kb
set Rb=Zc(fb,Rb,Tb)
set kb=Kc(fb,60.,Rb)
set Tb=At
set hb=CreateUnit(gb,1697656887,kb,Tb,Rb)
if Yb then
call StartSound(Bu[db])
endif
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Fb=lt
set bt[Fb]=13
else
call kc("Out of memory: Could not create Closure.")
set Fb=0
endif
else
set Ot=Ot-1
set Fb=ot[Ot]
set bt[Fb]=13
endif
set h[Fb]=0
set Lu[Fb]=hb
set Xu[Fb]=gb
set Cu[Fb]=fb
set Vu[Fb]=Gb
set db=R2I(32.5)
set F[Fb]=Kl()
call Qb(Bs,GetHandleId(F[Fb]),Fb)
set h[Fb]=db
call TimerStart(F[Fb],0.025,true,xi)
set gb=null
set hb=null
endfunction
function VS takes nothing returns nothing
local integer ZS=Hl(GetExpiredTimer())
local integer US=ZS
local unit IS
local real PS
local integer AS
local integer DS
local player HS
local group JS
local timer KS
local boolean LS
local real XS
local real CS
if bt[ZS]<=14 then
if bt[ZS]<=8 then
if bt[ZS]<=5 then
if bt[ZS]<=3 then
if bt[ZS]<=2 then
if UnitAlive(Q[ZS]) then
call IssueImmediateOrder(Q[ZS],"stop")
else
set h[ZS]=1
endif
set CS=W[ZS]
set XS=E[ZS]
call SetUnitPosition(Q[ZS],CS,XS)
else
if UnitAlive(Z[ZS]) then
call IssueImmediateOrder(Z[ZS],"stop")
else
set h[ZS]=1
endif
set XS=U[ZS]
set CS=I[ZS]
call SetUnitPosition(Z[ZS],XS,CS)
if h[ZS]==1 then
call DestroyEffect(P[ZS])
endif
endif
elseif bt[ZS]<=4 then
if UnitAlive(A[ZS]) then
call IssueImmediateOrder(A[ZS],"stop")
else
set h[ZS]=1
endif
else
if UnitAlive(D[ZS]) then
call IssueImmediateOrder(D[ZS],"stop")
else
set h[ZS]=1
endif
if h[ZS]==1 then
call DestroyEffect(H[ZS])
endif
endif
elseif bt[ZS]<=7 then
if bt[ZS]<=6 then
if UnitAlive(J[ZS]) then
call IssueImmediateOrder(J[ZS],"stop")
else
set h[ZS]=1
endif
if h[ZS]==1 then
call DestroyEffect(K[ZS])
endif
else
call Ac(Yw[ZS],100.)
set IS=Yw[ZS]
set CS=GetUnitX(IS)
set XS=GetUnitY(IS)
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=53
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=53
endif
set aw[DS]=Gw[ZS]
set nw[DS]=gw[ZS]
set dw[DS]=hw[ZS]
set fw[DS]=Fw[ZS]
set Rw[DS]=ZS
call hS(CS,XS,90.,null,DS)
if h[ZS]==1 then
call KillUnit(Yw[ZS])
if tt==0 then
if St<32768 then
set St=St+1
set DS=St
set ct[DS]=37
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set tt=tt-1
set DS=st[tt]
set ct[DS]=37
endif
set Tw[DS]=Yw[ZS]
call Sc(DS,2.)
endif
endif
else
call SetUnitAnimationByIndex(xw[ZS],15)
endif
elseif bt[ZS]<=11 then
if bt[ZS]<=10 then
if bt[ZS]<=9 then
call IssueImmediateOrderById(vw[ZS],851973)
if h[ZS]==1 then
call SetUnitTimeScale(vw[ZS],1.)
endif
else
call IssueImmediateOrderById(Vw[ZS],851973)
if h[ZS]==1 then
call SetUnitInvulnerable(Vw[ZS],false)
endif
endif
else
call IssueImmediateOrderById(su[ZS],851973)
call SetUnitAnimationByIndex(su[ZS],7)
if h[ZS]==1 then
call jb(Pu,su[ZS],tu[ZS],iu[ZS],false)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set DS=lt
set bt[DS]=12
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set Ot=Ot-1
set DS=ot[Ot]
set bt[DS]=12
endif
set h[DS]=0
set wu[DS]=su[ZS]
set uu[DS]=tu[ZS]
set ru[DS]=iu[ZS]
set ZS=R2I(50.5)
set F[DS]=Kl()
set KS=F[DS]
call Qb(Bs,GetHandleId(KS),DS)
set h[DS]=ZS
call TimerStart(F[DS],0.01,true,xi)
endif
endif
elseif bt[ZS]<=13 then
if bt[ZS]<=12 then
call IssueImmediateOrderById(wu[ZS],851973)
if h[ZS]==1 then
call jb(Pu,wu[ZS],uu[ZS],ru[ZS],false)
endif
else
if h[ZS]!=1 then
set LS=not UnitAlive(Lu[ZS])
else
set LS=false
endif
if LS then
set h[ZS]=1
endif
call Ac(Lu[ZS],50.)
set IS=Lu[ZS]
set XS=GetUnitX(IS)
set CS=GetUnitY(IS)
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=56
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=56
endif
set Au[DS]=Xu[ZS]
set Du[DS]=ZS
call eS(XS,CS,140.,DS)
if h[ZS]==1 then
call KillUnit(Lu[ZS])
call KillUnit(CreateUnit(Xu[ZS],1697656880,XS,CS,0.))
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=57
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=57
endif
set Hu[DS]=Xu[ZS]
set Ju[DS]=Cu[ZS]
set Ku[DS]=Vu[ZS]
call eS(XS,CS,380.,DS)
endif
endif
else
call Ac(nu[ZS],15.)
set IS=nu[ZS]
set XS=GetUnitX(IS)
set CS=GetUnitY(IS)
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=58
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=58
endif
set cu[DS]=du[ZS]
set ou[DS]=nu[ZS]
call hS(XS,CS,600.,null,DS)
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=59
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=59
endif
set Ou[DS]=du[ZS]
set lu[DS]=ZS
call hS(XS,CS,100.,null,DS)
if h[ZS]==1 then
call DestroyGroup(fu[ZS])
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=60
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=60
endif
set bu[DS]=du[ZS]
set yu[DS]=XS
set pu[DS]=CS
set eu[DS]=nu[ZS]
set qu[DS]=Ru[ZS]
set au[DS]=Tu[ZS]
call eS(XS,CS,100.,DS)
call KillUnit(nu[ZS])
endif
endif
elseif bt[ZS]<=21 then
if bt[ZS]<=18 then
if bt[ZS]<=16 then
if bt[ZS]<=15 then
call SetUnitAnimationByIndex(xu[ZS],11)
call IssueImmediateOrder(xu[ZS],"stop")
if h[ZS]==1 then
if Ot==0 then
if lt<32768 then
set lt=lt+1
set DS=lt
set bt[DS]=16
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set Ot=Ot-1
set DS=ot[Ot]
set bt[DS]=16
endif
set h[DS]=0
set Yu[DS]=xu[ZS]
set Gu[DS]=vu[ZS]
set gu[DS]=mu[ZS]
set hu[DS]=Qu[ZS]
set Fu[DS]=Wu[ZS]
set ku[DS]=Eu[ZS]
set ju[DS]=Zu[ZS]
set ZS=R2I(20.5)
set F[DS]=Kl()
set KS=F[DS]
call Qb(Bs,GetHandleId(KS),DS)
set h[DS]=ZS
call TimerStart(F[DS],0.01,true,xi)
endif
else
call IssueImmediateOrder(Yu[ZS],"stop")
if h[ZS]==1 then
call SetUnitTimeScale(Yu[ZS],1.)
set CS=gu[ZS]
set XS=hu[ZS]
call KO(Gu[ZS],Yu[ZS],CS,XS,Fu[ZS],ku[ZS],GetOwningPlayer(Yu[ZS]),ju[ZS])
endif
endif
elseif bt[ZS]<=17 then
set IS=Ir[ZS]
set CS=GetUnitX(IS)
set XS=GetUnitY(IS)
set PS=GetUnitFacing(Ir[ZS])*0.017453293
call IssueImmediateOrderById(Ir[ZS],851973)
if h[ZS]==1 then
set HS=Pr[ZS]
set IS=CreateUnit(HS,1697656889,CS,XS,PS*57.295779513)
call SetUnitVertexColor(Ir[ZS],0,0,0,0)
call Gc("DevilSlam.mdx",CS,XS)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set AS=lt
set bt[AS]=18
else
call kc("Out of memory: Could not create Closure.")
set AS=0
endif
else
set Ot=Ot-1
set AS=ot[Ot]
set bt[AS]=18
endif
set h[AS]=0
set cr[AS]=Ir[ZS]
set lr[AS]=IS
set DS=R2I(1080.5)
set F[AS]=Kl()
set KS=F[AS]
call Qb(Bs,GetHandleId(KS),AS)
set h[AS]=DS
call TimerStart(F[AS],0.01,true,xi)
if tt==0 then
if St<32768 then
set St=St+1
set DS=St
set ct[DS]=44
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set tt=tt-1
set DS=st[tt]
set ct[DS]=44
endif
set vr[DS]=Ir[ZS]
set mr[DS]=CS
set Qr[DS]=XS
set Wr[DS]=IS
set Er[DS]=Pr[ZS]
set Zr[DS]=PS
set Ur[DS]=Ar[ZS]
call Sc(DS,1.2)
endif
elseif UnitAlive(cr[ZS]) then
call IssueImmediateOrderById(cr[ZS],851973)
else
call RemoveUnit(lr[ZS])
call SetUnitVertexColor(cr[ZS],255,255,255,1000)
set h[ZS]=1
endif
elseif bt[ZS]<=20 then
if bt[ZS]<=19 then
if UnitAlive(Yr[ZS]) then
set HS=Gr[ZS]
set XS=hr[ZS]
set CS=Fr[ZS]
set IS=CreateUnit(HS,1697656897,gr[ZS],XS,CS*57.295779513)
if tt==0 then
if St<32768 then
set St=St+1
set DS=St
set ct[DS]=45
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set tt=tt-1
set DS=st[tt]
set ct[DS]=45
endif
set br[DS]=IS
call Sc(DS,2.)
set XS=gr[ZS]
set CS=hr[ZS]
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=61
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=61
endif
set yr[DS]=Yr[ZS]
set pr[DS]=kr[ZS]
call eS(XS,CS,1000.,DS)
else
set h[ZS]=1
endif
if h[ZS]==1 then
set XS=gr[ZS]
set CS=hr[ZS]
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=62
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=62
endif
set er[DS]=Gr[ZS]
call eS(XS,CS,1000.,DS)
if tt==0 then
if St<32768 then
set St=St+1
set DS=St
set ct[DS]=46
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set tt=tt-1
set DS=st[tt]
set ct[DS]=46
endif
set nr[DS]=jr[ZS]
set dr[DS]=gr[ZS]
set fr[DS]=hr[ZS]
set Rr[DS]=xr[ZS]
set Tr[DS]=Yr[ZS]
call Sc(DS,1.5)
endif
else
call Ac(rs[ZS],150.)
set IS=rs[ZS]
set XS=GetUnitX(IS)
set CS=GetUnitY(IS)
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=63
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=63
endif
set Lr[DS]=ZS
set Xr[DS]=ss[ZS]
set Cr[DS]=ts[ZS]
set Vr[DS]=is[ZS]
set Br[DS]=Ss[ZS]
call eS(XS,CS,105.,DS)
if h[ZS]==1 then
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=64
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=64
endif
set Nr[DS]=ss[ZS]
set Mr[DS]=ts[ZS]
set ws[DS]=is[ZS]
set us[DS]=Ss[ZS]
call eS(XS,CS,380.,DS)
call SetUnitScale(rs[ZS],1.4,1.4,1.4)
call KillUnit(rs[ZS])
call DestroyGroup(ts[ZS])
endif
endif
else
call SetUnitAnimationByIndex(os[ZS],14)
endif
elseif bt[ZS]<=24 then
if bt[ZS]<=23 then
if bt[ZS]<=22 then
set DS=ZS
call IssueImmediateOrderById(Os[ZS],851973)
set JS=ls[ZS]
set M=CreateGroup()
call ForGroup(JS,vi)
set JS=M
loop
exitwhen FirstOfGroup(JS)==null
set IS=FirstOfGroup(JS)
call GroupRemoveUnit(JS,IS)
if UnitAlive(IS) then
call IssueImmediateOrderById(IS,851973)
else
call GroupRemoveUnit(ls[DS],IS)
endif
endloop
call GroupClear(JS)
call DestroyGroup(JS)
elseif h[ZS]!=1 then
set IS=ps[ZS]
set CS=GetUnitX(IS)
set XS=GetUnitY(IS)
set IS=CreateUnit(es[ZS],1697656884,CS,XS,GetRandomReal(0.,360.))
call GroupAddUnit(qs[ZS],IS)
if wt==0 then
if ut<32768 then
set ut=ut+1
set DS=ut
set rt[DS]=65
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set wt=wt-1
set DS=Ms[wt]
set rt[DS]=65
endif
set bs[DS]=es[ZS]
set ys[DS]=as[ZS]
call eS(CS,XS,230.,DS)
endif
else
call Ac(Fs[ZS],65.)
if h[ZS]==1 then
call RemoveUnit(Fs[ZS])
call SetUnitTimeScale(js[ZS],1.)
call SetUnitAnimationByIndex(js[ZS],16)
if tt==0 then
if St<32768 then
set St=St+1
set DS=St
set ct[DS]=50
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set tt=tt-1
set DS=st[tt]
set ct[DS]=50
endif
set Ts[DS]=ks[ZS]
set Ys[DS]=js[ZS]
set Gs[DS]=xs[ZS]
set gs[DS]=vs[ZS]
set hs[DS]=ms[ZS]
call Sc(DS,0.4)
endif
endif
elseif bt[ZS]<=26 then
if bt[ZS]<=25 then
if UnitAlive(Ds[ZS]) then
call IssueImmediateOrderById(Ds[ZS],851973)
call IssueImmediateOrderById(Hs[ZS],851973)
call SetUnitAnimationByIndex(Ds[ZS],15)
set IS=Ds[ZS]
set CS=mc(Ds[ZS],Hs[ZS])*0.017453293
call SetUnitFacing(IS,CS*57.295779513)
else
call DestroyEffect(Js[ZS])
set h[ZS]=1
endif
if h[ZS]==1 then
if UnitAlive(Ds[ZS]) then
call SetUnitTimeScale(Ds[ZS],3.)
call SetUnitAnimationByIndex(Ds[ZS],15)
set IS=Ds[ZS]
call Gc("BlackBlink.mdx",GetUnitX(IS),GetUnitY(IS))
if Ot==0 then
if lt<32768 then
set lt=lt+1
set DS=lt
set bt[DS]=26
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set Ot=Ot-1
set DS=ot[Ot]
set bt[DS]=26
endif
set h[DS]=0
set Us[DS]=Ds[ZS]
set Is[DS]=Hs[ZS]
set Ps[DS]=Js[ZS]
set As[DS]=Ks[ZS]
set ZS=R2I(15.500000954)
set F[DS]=Kl()
set KS=F[DS]
call Qb(Bs,GetHandleId(KS),DS)
set h[DS]=ZS
call TimerStart(F[DS],0.01,true,xi)
else
call DestroyEffect(Js[ZS])
endif
endif
else
call IssueImmediateOrder(Us[ZS],"stop")
call IssueImmediateOrder(Is[ZS],"stop")
if h[ZS]==1 then
call SetUnitTimeScale(Us[ZS],1.)
call DestroyEffect(Ps[ZS])
set IS=Is[ZS]
call Gc("blood.mdx",GetUnitX(IS),GetUnitY(IS))
set IS=Us[ZS]
set CS=Kc(Is[ZS],100.,mc(Us[ZS],Is[ZS]))
set XS=At
call SetUnitPosition(IS,CS,XS)
set IS=Us[ZS]
call Gc("BlackBlink.mdx",GetUnitX(IS),GetUnitY(IS))
call UnitDamageTarget(Us[ZS],Is[ZS],As[ZS],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set DS=lt
set bt[DS]=27
else
call kc("Out of memory: Could not create Closure.")
set DS=0
endif
else
set Ot=Ot-1
set DS=ot[Ot]
set bt[DS]=27
endif
set h[DS]=0
set Zs[DS]=Us[ZS]
set ZS=R2I(50.5)
set F[DS]=Kl()
set KS=F[DS]
call Qb(Bs,GetHandleId(KS),DS)
set h[DS]=ZS
call TimerStart(F[DS],0.01,true,xi)
endif
endif
else
call IssueImmediateOrder(Zs[ZS],"stop")
endif
set h[US]=h[US]-1
if h[US]<=0 then
call Xl(F[US])
if bt[US]==0 then
call kc("Double free: object of type CallbackCounted")
else
set ot[Ot]=US
set Ot=Ot+1
set bt[US]=0
endif
endif
set IS=null
set HS=null
set JS=null
set KS=null
endfunction
function Bl takes integer Vl returns trigger
call SaveFogStateHandle(Xs,Ns,0,ConvertFogState(Vl))
set Vl=Ns
return LoadTriggerHandle(Xs,Vl,0)
endfunction
function wO takes integer Co,code Vo returns nothing
local integer No=pw
local boolean Bo=HaveSavedInteger(Xs,No,Co)
local integer Mo
if not Bo then
set No=pw
set Mo=GetHandleId(CreateTrigger())
if ft[No]<=87 then
call Qb(No,Co,Mo)
else
call Qb(No,Co,Mo)
set Mo=sw[No]
set Bo=LoadInteger(uw,Mo,Co)>0
if not Bo then
set No=sw[No]
call SaveInteger(ww,No,rw[No],Co)
call SaveInteger(uw,No,Co,LoadInteger(uw,No,Co)+1)
set rw[No]=rw[No]+1
endif
endif
endif
set No=pw
set Co=LoadInteger(Xs,No,Co)
call TriggerAddCondition(Bl(Co),Filter(Vo))
endfunction
function XO takes nothing returns boolean
local integer LO
if vt==0 then
if mt<32768 then
set mt=mt+1
set LO=mt
else
call kc("Out of memory: Could not create Spell.")
set LO=0
endif
else
set vt=vt-1
set LO=xt[vt]
endif
set ir[LO]=s
set wr=LO
call wO(1144008755,Ui)
call wO(1144009011,Ii)
return true
endfunction
function Xo takes nothing returns boolean
local integer Ko=pw
local integer Lo=GetSpellAbilityId()
set Lo=LoadInteger(Xs,Ko,Lo)
return TriggerEvaluate(Bl(Lo))
endfunction
function Yo takes nothing returns boolean
return true
endfunction
function Zl takes nothing returns boolean
return true
endfunction
function aO takes nothing returns boolean
local integer qO
if kt==0 then
if jt<32768 then
set jt=jt+1
set qO=jt
else
call kc("Out of memory: Could not create Spell.")
set qO=0
endif
else
set kt=kt-1
set qO=Ft[kt]
endif
set Bu[qO]=u
set Nu[qO]=b
set Pu=qO
call wO(1144008753,Zi)
return true
endfunction
function bo takes nothing returns boolean
set V=CreateTimer()
call TimerStart(V,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,Qi)
return true
endfunction
function cS takes nothing returns nothing
call nb(T[Y-1],GetFilterUnit())
endfunction
function cb takes nothing returns boolean
call wO(1144009012,Hi)
return true
endfunction
function eO takes nothing returns boolean
local integer pO
set kw=CreateGroup()
if Tt==0 then
if Yt<32768 then
set Yt=Yt+1
set pO=Yt
else
call kc("Out of memory: Could not create Spell.")
set pO=0
endif
else
set Tt=Tt-1
set pO=Rt[Tt]
endif
set Bw[pO]=t
set Nw[pO]=y
set jw=pO
return true
endfunction
function eo takes nothing returns nothing
call GroupAddUnit(M,GetEnumUnit())
endfunction
function fc takes nothing returns boolean
local integer dc
set x[0]="0"
set x[1]="1"
set x[2]="2"
set x[3]="3"
set x[4]="4"
set x[5]="5"
set x[6]="6"
set x[7]="7"
set x[8]="8"
set x[9]="9"
set x[10]="A"
set x[11]="B"
set x[12]="C"
set x[13]="D"
set x[14]="E"
set x[15]="F"
set v=Pl()
set dc=0
loop
exitwhen dc>15
call Qb(v,StringHash(x[dc]),dc)
set dc=dc+1
endloop
return true
endfunction
function fo takes nothing returns boolean
local rect ao=w
local real do=GetRectCenterX(ao)
local real no=GetRectCenterY(ao)
set tw=do
set iw=no
set Ow=Player(0)
call Player(5)
set no=tw
set do=iw
set ow=CreateUnit(Ow,1211445298,no,do,0.)
call SetHeroLevel(ow,35,false)
set ao=null
return true
endfunction
function gc takes nothing returns boolean
set m=InitHashtable()
return true
endfunction
function iS takes nothing returns boolean
return true
endfunction
function jc takes nothing returns boolean
return true
endfunction
function jo takes nothing returns boolean
return true
endfunction
function lo takes real uo,real ro,player so,real io returns unit
local group co=CreateGroup()
local group So
local unit oo
local unit Oo
call GroupEnumUnitsInRange(co,uo,ro,io,null)
set So=co
set M=CreateGroup()
call ForGroup(co,vi)
set co=M
loop
exitwhen FirstOfGroup(co)==null
set oo=FirstOfGroup(co)
call GroupRemoveUnit(co,oo)
if (not UnitAlive(oo))or IsUnitAlly(oo,so) then
call GroupRemoveUnit(So,oo)
endif
endloop
call GroupClear(co)
call DestroyGroup(co)
set oo=FirstOfGroup(So)
set M=CreateGroup()
call ForGroup(So,vi)
set So=M
loop
exitwhen FirstOfGroup(So)==null
set Oo=FirstOfGroup(So)
call GroupRemoveUnit(So,Oo)
if SquareRoot((GetUnitX(Oo)-uo)*(GetUnitX(Oo)-uo)+(GetUnitY(Oo)-ro)*(GetUnitY(Oo)-ro))<SquareRoot((GetUnitX(oo)-uo)*(GetUnitX(oo)-uo)+(GetUnitY(oo)-ro)*(GetUnitY(oo)-ro)) then
set oo=Oo
endif
endloop
call GroupClear(So)
call DestroyGroup(So)
set Ji=oo
set So=null
set co=null
set oo=null
set Oo=null
return Ji
endfunction
function kO takes nothing returns nothing
local unit nO=GetTriggerUnit()
local real hO=GetSpellTargetX()
local real FO=GetSpellTargetY()
local integer dO
local real fO
local real RO
local unit TO
local boolean YO
local integer GO
local integer gO
if GetUnitAbilityLevel(nO,1144009011)<=0 then
set TO=lo(hO,FO,GetOwningPlayer(nO),100.)
if TO==null then
set YO=true
else
set YO=not IsUnitInGroup(TO,Mw)
endif
if YO then
call jb(Pu,nO,hO,FO,true)
else
call StartSound(Nu[Pu])
if Ot==0 then
if lt<32768 then
set lt=lt+1
set dO=lt
set bt[dO]=11
else
call kc("Out of memory: Could not create Closure.")
set dO=0
endif
else
set Ot=Ot-1
set dO=ot[Ot]
set bt[dO]=11
endif
set h[dO]=0
set su[dO]=nO
set tu[dO]=hO
set iu[dO]=FO
call vS(0.01,0.05,dO)
endif
else
set dO=Su
set fO=4500/15.*0.025
set gO=GetUnitAbilityLevel(nO,1144008753)
set RO=gO*20.+gO*GetHeroInt(nO,true)*1./5
set TO=lo(hO,FO,GetOwningPlayer(nO),100.)
if TO==null then
set YO=false
else
set YO=IsUnitInGroup(TO,kw)
endif
if YO then
set GO=20
else
set GO=10
endif
set gO=GetRandomInt(1,GO)
if YO then
call StartSound(Iu[dO])
else
call StartSound(Uu[dO])
endif
call SetUnitTimeScale(nO,2.)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set GO=lt
set bt[GO]=15
else
call kc("Out of memory: Could not create Closure.")
set GO=0
endif
else
set Ot=Ot-1
set GO=ot[Ot]
set bt[GO]=15
endif
set h[GO]=0
set xu[GO]=nO
set vu[GO]=dO
set mu[GO]=hO
set Qu[GO]=FO
set Wu[GO]=RO
set Eu[GO]=fO
set Zu[GO]=gO
call vS(0.01,0.05,GO)
endif
set nO=null
set TO=null
endfunction
function ko takes nothing returns boolean
return true
endfunction
function ll takes nothing returns boolean
set Dr=r
call wO(1144008754,Di)
return true
endfunction
function mo takes nothing returns boolean
return true
endfunction
function Sb takes string ib returns nothing
endfunction
function nc takes nothing returns nothing
local integer cc=Hl(GetExpiredTimer())
local unit oc
local boolean Oc
local effect lc
local integer bc
local integer yc
local timer pc
local group ec
local real qc
local real ac
if ct[cc]<=41 then
if ct[cc]<=36 then
if ct[cc]<=33 then
if ct[cc]<=32 then
if ct[cc]<=31 then
set g=g+50
else
set g=g*2
endif
else
set g=g/2
set yc=g
if yc!=250 then
call Sb("Expected <"+I2S(250)+">, Actual <"+I2S(yc)+">")
endif
endif
elseif ct[cc]<=35 then
if ct[cc]<=34 then
if L[cc]>0. then
set oc=X[cc]
set ac=L[cc]-0.1
set Oc=C[cc]
if tt==0 then
if St<32768 then
set St=St+1
set yc=St
set ct[yc]=34
else
call kc("Out of memory: Could not create Closure.")
set yc=0
endif
else
set tt=tt-1
set yc=st[tt]
set ct[yc]=34
endif
set L[yc]=ac
set X[yc]=oc
set C[yc]=Oc
set pc=Kl()
call Qb(Bs,GetHandleId(pc),yc)
call TimerStart(pc,0.1,false,mi)
set j[yc]=pc
elseif C[cc]then
call RemoveUnit(X[cc])
endif
else
set oc=Sw[cc]
set yc=cw[cc]+1
call PauseUnit(oc,true)
call SetUnitAnimationByIndex(oc,yc)
call DisplayTimedTextToPlayer(bw,0.,0.,45.,I2S(yc))
if tt==0 then
if St<32768 then
set St=St+1
set bc=St
set ct[bc]=35
else
call kc("Out of memory: Could not create Closure.")
set bc=0
endif
else
set tt=tt-1
set bc=st[tt]
set ct[bc]=35
endif
set Sw[bc]=oc
set cw[bc]=yc
set pc=Kl()
call Qb(Bs,GetHandleId(pc),bc)
call TimerStart(pc,1.5,false,mi)
set j[bc]=pc
endif
else
call GroupRemoveUnit(Mw,qw[cc])
endif
elseif ct[cc]<=39 then
if ct[cc]<=38 then
if ct[cc]<=37 then
call RemoveUnit(Tw[cc])
else
call RemoveUnit(Uw[cc])
set ac=Aw[cc]
set oc=CreateUnit(Iw[cc],1697656882,Pw[cc],ac,0)
set qc=Pw[cc]
set ac=Aw[cc]
if wt==0 then
if ut<32768 then
set ut=ut+1
set yc=ut
set rt[yc]=54
else
call kc("Out of memory: Could not create Closure.")
set yc=0
endif
else
set wt=wt-1
set yc=Ms[wt]
set rt[yc]=54
endif
set Qw[yc]=Iw[cc]
set Ww[yc]=Dw[cc]
set Ew[yc]=Hw[cc]
call eS(qc,ac,680.,yc)
if tt==0 then
if St<32768 then
set St=St+1
set yc=St
set ct[yc]=40
else
call kc("Out of memory: Could not create Closure.")
set yc=0
endif
else
set tt=tt-1
set yc=st[tt]
set ct[yc]=40
endif
set Zw[yc]=oc
set pc=Kl()
call Qb(Bs,GetHandleId(pc),yc)
call TimerStart(pc,3.,false,mi)
set j[yc]=pc
endif
else
call GroupRemoveUnit(kw,mw[cc])
endif
elseif ct[cc]<=40 then
call RemoveUnit(Zw[cc])
else
call GroupRemoveUnit(kw,Jw[cc])
endif
elseif ct[cc]<=46 then
if ct[cc]<=44 then
if ct[cc]<=43 then
if ct[cc]<=42 then
call RemoveUnit(Cw[cc])
else
call UnitRemoveAbility(Mu[cc],1144009011)
endif
elseif UnitAlive(vr[cc]) then
call Gc("IceExp.mdx",mr[cc],Qr[cc])
set lc=AddSpecialEffectTarget("RukiaAura.mdx",Wr[cc],"origin")
if Ot==0 then
if lt<32768 then
set lt=lt+1
set bc=lt
set bt[bc]=19
else
call kc("Out of memory: Could not create Closure.")
set bc=0
endif
else
set Ot=Ot-1
set bc=ot[Ot]
set bt[bc]=19
endif
set h[bc]=0
set Yr[bc]=vr[cc]
set Gr[bc]=Er[cc]
set gr[bc]=mr[cc]
set hr[bc]=Qr[cc]
set Fr[bc]=Zr[cc]
set kr[bc]=Ur[cc]
set jr[bc]=lc
set xr[bc]=Wr[cc]
set yc=R2I(23.227272034)
set F[bc]=Kl()
set pc=F[bc]
call Qb(Bs,GetHandleId(pc),bc)
set h[bc]=yc
call TimerStart(F[bc],0.33,true,xi)
else
call RemoveUnit(Wr[cc])
call SetUnitVertexColor(vr[cc],255,255,255,1000)
endif
elseif ct[cc]<=45 then
call KillUnit(br[cc])
else
call DestroyEffect(nr[cc])
call Gc("DustWave.mdx",dr[cc],fr[cc])
call Gc("DevilSlam.mdx",dr[cc],fr[cc])
if tt==0 then
if St<32768 then
set St=St+1
set yc=St
set ct[yc]=47
else
call kc("Out of memory: Could not create Closure.")
set yc=0
endif
else
set tt=tt-1
set yc=st[tt]
set ct[yc]=47
endif
set qr[yc]=Rr[cc]
set ar[yc]=Tr[cc]
set pc=Kl()
call Qb(Bs,GetHandleId(pc),yc)
call TimerStart(pc,0.05,false,mi)
set j[yc]=pc
endif
elseif ct[cc]<=49 then
if ct[cc]<=48 then
if ct[cc]<=47 then
call RemoveUnit(qr[cc])
call SetUnitVertexColor(ar[cc],255,255,255,1000)
else
call UnitRemoveAbility(Jr[cc],1144008758)
if tt==0 then
if St<32768 then
set St=St+1
set yc=St
set ct[yc]=49
else
call kc("Out of memory: Could not create Closure.")
set yc=0
endif
else
set tt=tt-1
set yc=st[tt]
set ct[yc]=49
endif
set Hr[yc]=Kr[cc]
set pc=Kl()
call Qb(Bs,GetHandleId(pc),yc)
call TimerStart(pc,2.,false,mi)
set j[yc]=pc
endif
else
call DestroyEffect(Hr[cc])
endif
elseif ct[cc]<=50 then
call StartSound(Ws[Ts[cc]])
call SetUnitAnimationByIndex(Ys[cc],15)
if tt==0 then
if St<32768 then
set St=St+1
set yc=St
set ct[yc]=51
else
call kc("Out of memory: Could not create Closure.")
set yc=0
endif
else
set tt=tt-1
set yc=st[tt]
set ct[yc]=51
endif
set ns[yc]=Gs[cc]
set ds[yc]=Ys[cc]
set fs[yc]=gs[cc]
set Rs[yc]=hs[cc]
set pc=Kl()
call Qb(Bs,GetHandleId(pc),yc)
call TimerStart(pc,0.,false,mi)
set j[yc]=pc
else
set yc=cc
set ec=ns[cc]
loop
exitwhen FirstOfGroup(ec)==null
set oc=FirstOfGroup(ec)
call GroupRemoveUnit(ec,oc)
if UnitAlive(oc) then
call UnitDamageTarget(ds[yc],oc,fs[yc],false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
call wo(oc,2.,"Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl","origin")
call Gc("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl",GetUnitX(oc),GetUnitY(oc))
endif
endloop
set ec=Rs[yc]
loop
exitwhen FirstOfGroup(ec)==null
set oc=FirstOfGroup(ec)
call GroupRemoveUnit(ec,oc)
call KillUnit(oc)
endloop
call DestroyGroup(Rs[yc])
call DestroyGroup(ns[yc])
endif
call Xl(j[cc])
if ct[cc]==0 then
call kc("Double free: object of type CallbackSingle")
else
set st[tt]=cc
set tt=tt+1
set ct[cc]=0
endif
set oc=null
set lc=null
set pc=null
set ec=null
endfunction
function ob takes nothing returns nothing
call DisplayTimedTextToPlayer(bw,0.,0.,45.,"kek")
endfunction
function po takes nothing returns boolean
set N=CreateGroup()
return true
endfunction
function qo takes nothing returns boolean
set ww=InitHashtable()
set uw=InitHashtable()
return true
endfunction
function rc takes nothing returns nothing
local integer BS=Hl(GetExpiredTimer())
local unit wc=ur[BS]
local real NS=GetUnitState(wc,UNIT_STATE_MANA)
local unit MS
local boolean uc
if UnitAlive(ur[BS]) then
set uc=GetUnitAbilityLevel(ur[BS],1144009011)>0
else
set uc=false
endif
if uc and NS>=20. then
set MS=ur[BS]
set wc=ur[BS]
set NS=NS-GetUnitState(wc,UNIT_STATE_MAX_MANA)*rr[BS]
call SetUnitState(MS,UNIT_STATE_MANA,NS)
else
call RemoveUnit(sr[BS])
call DestroyEffect(tr[BS])
call UnitRemoveAbility(ur[BS],1144009011)
call SetPlayerAbilityAvailable(GetOwningPlayer(ur[BS]),1144008755,true)
call Xl(k[BS])
if qt[BS]==0 then
call kc("Double free: object of type CallbackPeriodic")
else
set yt[pt]=BS
set pt=pt+1
set qt[BS]=0
endif
endif
set MS=null
set wc=null
endfunction
function sl takes nothing returns nothing
local unit ul=GetTriggerUnit()
local integer rl
if tt==0 then
if St<32768 then
set St=St+1
set rl=St
set ct[rl]=43
else
call kc("Out of memory: Could not create Closure.")
set rl=0
endif
else
set tt=tt-1
set rl=st[tt]
set ct[rl]=43
endif
set Mu[rl]=ul
call Sc(rl,0.02)
set ul=null
endfunction
function tS takes nothing returns boolean
return true
endfunction
function tl takes nothing returns boolean
set Sr=c
call wO(1144008757,Ai)
return true
endfunction
function uO takes nothing returns boolean
set Mw=CreateGroup()
set ew=O
call wO(1144008752,Ei)
return true
endfunction
function uS takes nothing returns nothing
local integer Ni
local location array Mi
local real wS
set f=CreateLeaderboard()
call LeaderboardSetLabel(f,"Leaks")
call PlayerSetLeaderboard(GetLocalPlayer(),f)
call LeaderboardDisplay(f,true)
call LeaderboardAddItem(f,":",0,Player(0))
call LeaderboardSetSizeByItemCount(f,1)
set Ni=0
set wS=0.
loop
exitwhen Ni>=50
set Ni=Ni+1
set Mi[Ni]=Location(0.,0.)
set wS=wS+(GetHandleId(Mi[Ni])-1048576)
endloop
set wS=wS/Ni-Ni/2
loop
call RemoveLocation(Mi[Ni])
set Mi[Ni]=null
exitwhen Ni<=1
set Ni=Ni-1
endloop
call LeaderboardSetItemValue(f,0,R2I(wS))
call TimerStart(GetExpiredTimer(),0.05,true,Jt)
endfunction
function vl takes nothing returns nothing
local unit dl=GetTriggerUnit()
local real jl=GetSpellTargetX()
local real xl=GetSpellTargetY()
local integer fl
local group Rl
local group Tl
local real Yl
local integer Gl
local effect gl
local player hl
local unit Fl
local real kl
if GetUnitAbilityLevel(dl,1144009011)<=0 then
set hl=GetOwningPlayer(dl)
set Tl=CreateGroup()
set Yl=0.5*GetHeroInt(dl,true)+GetUnitAbilityLevel(dl,1144008754)*30
set xl=Zc(dl,jl,xl)
set kl=Kc(dl,80.,xl)
set jl=At
set Fl=CreateUnit(hl,1747988531,kl,jl,xl)
call StartSound(Dr)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set fl=lt
set bt[fl]=20
else
call kc("Out of memory: Could not create Closure.")
set fl=0
endif
else
set Ot=Ot-1
set fl=ot[Ot]
set bt[fl]=20
endif
set h[fl]=0
set rs[fl]=Fl
set ss[fl]=hl
set ts[fl]=Tl
set is[fl]=dl
set Ss[fl]=Yl
call vS(0.025,0.433333367,fl)
elseif GetUnitState(dl,UNIT_STATE_LIFE)>GetUnitState(dl,UNIT_STATE_MAX_LIFE)*20/100. then
set fl=cs
set Rl=CreateGroup()
set Tl=CreateGroup()
set hl=GetOwningPlayer(dl)
set Yl=0.5*GetHeroInt(dl,true)+GetUnitAbilityLevel(dl,1144008754)*30
set kl=Zc(dl,jl,xl)
set xl=Kc(dl,60.,kl)
set jl=At
set Fl=CreateUnit(hl,1697656883,xl,jl,kl)
call StartSound(Qs[fl])
call SetUnitTimeScale(dl,1.5)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=21
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=21
endif
set h[Gl]=0
set os[Gl]=dl
call vS(0.01,0.05,Gl)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=22
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=22
endif
set h[Gl]=0
set Os[Gl]=dl
set ls[Gl]=Tl
call vS(0.01,1.015384674,Gl)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=23
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=23
endif
set h[Gl]=0
set ps[Gl]=Fl
set es[Gl]=hl
set qs[Gl]=Rl
set as[Gl]=Tl
call vS(0.1,0.615384638,Gl)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=24
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=24
endif
set h[Gl]=0
set Fs[Gl]=Fl
set ks[Gl]=fl
set js[Gl]=dl
set xs[Gl]=Tl
set vs[Gl]=Yl
set ms[Gl]=Rl
call vS(0.025,0.615384638,Gl)
else
set kl=GetUnitX(dl)
set Yl=GetUnitY(dl)
set kl=tb(kl,Yl,GetUnitFacing(dl)*0.017453293,150.)
set Yl=Ht
set Fl=lo(kl,Yl,GetOwningPlayer(dl),150.)
if Fl!=null then
set fl=Es
set jl=GetHeroInt(dl,true)+(GetUnitState(dl,UNIT_STATE_MAX_LIFE)-GetUnitState(dl,UNIT_STATE_LIFE))/2.
set gl=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl",Fl,"origin")
call StartSound(Ls[fl])
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=25
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=25
endif
set h[Gl]=0
set Ds[Gl]=dl
set Hs[Gl]=Fl
set Js[Gl]=gl
set Ks[Gl]=jl
call vS(0.01,3.2,Gl)
else
set fl=cs
set Rl=CreateGroup()
set Tl=CreateGroup()
set hl=GetOwningPlayer(dl)
set Yl=0.5*GetHeroInt(dl,true)+GetUnitAbilityLevel(dl,1144008754)*30
set xl=Zc(dl,jl,xl)
set kl=Kc(dl,60.,xl)
set jl=At
set Fl=CreateUnit(hl,1697656883,kl,jl,xl)
call StartSound(Qs[fl])
call SetUnitTimeScale(dl,1.5)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=21
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=21
endif
set h[Gl]=0
set os[Gl]=dl
call vS(0.01,0.05,Gl)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=22
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=22
endif
set h[Gl]=0
set Os[Gl]=dl
set ls[Gl]=Tl
call vS(0.01,1.015384674,Gl)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=23
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=23
endif
set h[Gl]=0
set ps[Gl]=Fl
set es[Gl]=hl
set qs[Gl]=Rl
set as[Gl]=Tl
call vS(0.1,0.615384638,Gl)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set Gl=lt
set bt[Gl]=24
else
call kc("Out of memory: Could not create Closure.")
set Gl=0
endif
else
set Ot=Ot-1
set Gl=ot[Ot]
set bt[Gl]=24
endif
set h[Gl]=0
set Fs[Gl]=Fl
set ks[Gl]=fl
set js[Gl]=dl
set xs[Gl]=Tl
set vs[Gl]=Yl
set ms[Gl]=Rl
call vS(0.025,0.615384638,Gl)
endif
endif
set dl=null
set Rl=null
set Tl=null
set gl=null
set hl=null
set Fl=null
endfunction
function wl takes nothing returns nothing
local integer CO=wr
local unit VO=GetTriggerUnit()
local real BO=(8-1*GetUnitAbilityLevel(VO,1144008755))*1./100/40
local effect NO
local unit MO
call SetPlayerAbilityAvailable(GetOwningPlayer(VO),1144008755,false)
call UnitAddAbility(VO,1144009011)
call StartSound(ir[CO])
set NO=AddSpecialEffectTarget("HolyBlessing.mdx",VO,"origin")
set MO=CreateUnit(GetOwningPlayer(VO),1697656898,0.,0.,0.)
if pt==0 then
if et<32768 then
set et=et+1
set CO=et
set qt[CO]=29
else
call kc("Out of memory: Could not create Closure.")
set CO=0
endif
else
set pt=pt-1
set CO=yt[pt]
set qt[CO]=29
endif
set ur[CO]=VO
set rr[CO]=BO
set sr[CO]=MO
set tr[CO]=NO
set k[CO]=Kl()
call Qb(Bs,GetHandleId(k[CO]),CO)
call TimerStart(k[CO],0.025,true,Pi)
set VO=null
set NO=null
set MO=null
endfunction
function xO takes nothing returns boolean
local integer jO
if gt==0 then
if ht<32768 then
set ht=ht+1
set jO=ht
else
call kc("Out of memory: Could not create Spell.")
set jO=0
endif
else
set gt=gt-1
set jO=Gt[gt]
endif
set Uu[jO]=l
set Iu[jO]=p
set Su=jO
return true
endfunction
function yO takes nothing returns nothing
local unit rO=GetTriggerUnit()
local real oO=GetSpellTargetX()
local real OO=GetSpellTargetY()
local real sO
local player tO
local integer iO
local real SO
local unit cO
local real lO
local real bO
if GetUnitAbilityLevel(rO,1144009011)<=0 then
set iO=GetUnitAbilityLevel(rO,1144008752)
set sO=GetHeroInt(rO,true)*1.
set SO=2+0.5*iO
set lO=Zc(rO,oO,OO)
set tO=GetOwningPlayer(rO)
set lO=Kc(rO,70.,lO)
set bO=At
set cO=CreateUnit(tO,1697656886,lO,bO,57.295779513*Atan2(OO-bO,oO-lO))
call StartSound(ew)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set iO=lt
set bt[iO]=7
else
call kc("Out of memory: Could not create Closure.")
set iO=0
endif
else
set Ot=Ot-1
set iO=ot[Ot]
set bt[iO]=7
endif
set h[iO]=0
set Yw[iO]=cO
set Gw[iO]=tO
set gw[iO]=rO
set hw[iO]=sO
set Fw[iO]=SO
call vS(0.025,0.3,iO)
else
set iO=jw
set SO=0.5*GetUnitAbilityLevel(rO,1144008752)*GetHeroInt(rO,true)
set tO=GetOwningPlayer(rO)
set sO=GetUnitX(rO)
set lO=GetUnitY(rO)
if SquareRoot((oO-sO)*(oO-sO)+(OO-lO)*(OO-lO))>100. then
call StartSound(Bw[iO])
set cO=CreateUnit(tO,1697656881,oO,OO,0)
call SetUnitTimeScale(rO,1.5)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set iO=lt
set bt[iO]=8
else
call kc("Out of memory: Could not create Closure.")
set iO=0
endif
else
set Ot=Ot-1
set iO=ot[Ot]
set bt[iO]=8
endif
set h[iO]=0
set xw[iO]=rO
call vS(0.01,0.05,iO)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set iO=lt
set bt[iO]=9
else
call kc("Out of memory: Could not create Closure.")
set iO=0
endif
else
set Ot=Ot-1
set iO=ot[Ot]
set bt[iO]=9
endif
set h[iO]=0
set vw[iO]=rO
call vS(0.01,0.6,iO)
if tt==0 then
if St<32768 then
set St=St+1
set iO=St
set ct[iO]=38
else
call kc("Out of memory: Could not create Closure.")
set iO=0
endif
else
set tt=tt-1
set iO=st[tt]
set ct[iO]=38
endif
set Uw[iO]=cO
set Iw[iO]=tO
set Pw[iO]=oO
set Aw[iO]=OO
set Dw[iO]=rO
set Hw[iO]=SO
call Sc(iO,1.7)
else
call StartSound(Nw[iO])
set sO=GetUnitX(rO)
set lO=GetUnitY(rO)
set cO=CreateUnit(tO,1697656882,sO,lO,0)
if wt==0 then
if ut<32768 then
set ut=ut+1
set iO=ut
set rt[iO]=55
else
call kc("Out of memory: Could not create Closure.")
set iO=0
endif
else
set wt=wt-1
set iO=Ms[wt]
set rt[iO]=55
endif
set Kw[iO]=tO
set Lw[iO]=rO
set Xw[iO]=SO
call eS(oO,OO,680.,iO)
if tt==0 then
if St<32768 then
set St=St+1
set iO=St
set ct[iO]=42
else
call kc("Out of memory: Could not create Closure.")
set iO=0
endif
else
set tt=tt-1
set iO=st[tt]
set ct[iO]=42
endif
set Cw[iO]=cO
call Sc(iO,3.)
call SetUnitInvulnerable(rO,true)
if Ot==0 then
if lt<32768 then
set lt=lt+1
set iO=lt
set bt[iO]=10
else
call kc("Out of memory: Could not create Closure.")
set iO=0
endif
else
set Ot=Ot-1
set iO=ot[Ot]
set bt[iO]=10
endif
set h[iO]=0
set Vw[iO]=rO
call vS(0.01,1.2,iO)
endif
endif
set rO=null
set tO=null
set cO=null
endfunction
function yo takes nothing returns nothing
set B=B+0.030
endfunction
function Li takes nothing returns nothing
set Jt=function Bi
set Kt=function uS
set Lt=function mo
set Xt=function Ro
set Ct=function tS
set Vt=function Zl
set Bt=function Nl
set Nt=function Fo
set Mt=function iS
set wi=function Ul
set ui=function ko
set ri=function fc
set si=function po
set ti=function jo
set ii=function bo
set Si=function Yo
set ci=function gc
set oi=function To
set Oi=function Go
set li=function Cl
set bi=function SS
set yi=function Al
set pi=function FS
set ei=function jc
set qi=function qo
set ai=function Jo
set ni=function fo
set di=function XO
set fi=function uO
set Ri=function eO
set Ti=function aO
set Yi=function xO
set Gi=function tl
set gi=function El
set hi=function ll
set Fi=function Ql
set ki=function cb
set ji=function cS
set xi=function VS
set vi=function eo
set mi=function nc
set Qi=function yo
set Wi=function Xo
set Ei=function yO
set Zi=function kO
set Ui=function wl
set Ii=function sl
set Pi=function rc
set Ai=function Ol
set Di=function vl
set Hi=function ob
endfunction
function main takes nothing returns nothing
local trigger rS
local real sS
call Li()
call SetCameraBounds((-3328.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-3584.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),7424.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),11264.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-3328.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),11264.0-GetCameraMargin(CAMERA_MARGIN_TOP),7424.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-3584.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
if bj_dayAmbientSound!=null then
call StopSound(bj_dayAmbientSound,true,true)
endif
set bj_dayAmbientSound=CreateMIDISound("LordaeronSummerDay",20,20)
set sS=GetFloatGameState(GAME_STATE_TIME_OF_DAY)
if sS>=bj_TOD_DAWN and sS<bj_TOD_DUSK then
call StartSound(bj_dayAmbientSound)
endif
if bj_nightAmbientSound!=null then
call StopSound(bj_nightAmbientSound,true,true)
endif
set bj_nightAmbientSound=CreateMIDISound("LordaeronSummerNight",20,20)
set sS=GetFloatGameState(GAME_STATE_TIME_OF_DAY)
if sS<bj_TOD_DAWN or sS>=bj_TOD_DUSK then
call StartSound(bj_nightAmbientSound)
endif
call SetMapMusic("Music",true,0)
set u=CreateSound("war3mapImported\\Rukia_Q_01.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(u,1069)
call SetSoundChannel(u,0)
call SetSoundVolume(u,127)
call SetSoundPitch(u,1.0)
set r=CreateSound("war3mapImported\\Rukia_W_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(r,2240)
call SetSoundChannel(r,0)
call SetSoundVolume(r,127)
call SetSoundPitch(r,1.0)
set s=CreateSound("war3mapImported\\Rukia_R_01.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(s,2446)
call SetSoundChannel(s,0)
call SetSoundVolume(s,127)
call SetSoundPitch(s,1.0)
set t=CreateSound("war3mapImported\\Rukia_E_ALT_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(t,2929)
call SetSoundChannel(t,0)
call SetSoundVolume(t,127)
call SetSoundPitch(t,1.0)
set i=CreateSound("war3mapImported\\Rukia_W_ALT_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(i,1207)
call SetSoundChannel(i,0)
call SetSoundVolume(i,127)
call SetSoundPitch(i,1.0)
set S=CreateSound("war3mapImported\\Rukia_W_ALT_02.mp3",false,false,false,10,10,"")
call SetSoundDuration(S,1018)
call SetSoundChannel(S,0)
call SetSoundVolume(S,127)
call SetSoundPitch(S,1.0)
set c=CreateSound("war3mapImported\\Rukia_T_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(c,13907)
call SetSoundChannel(c,0)
call SetSoundVolume(c,127)
call SetSoundPitch(c,1.0)
set o=CreateSound("war3mapImported\\Rukia_W_02.mp3",false,false,false,10,10,"")
call SetSoundDuration(o,4382)
call SetSoundChannel(o,0)
call SetSoundVolume(o,127)
call SetSoundPitch(o,1.0)
set O=CreateSound("war3mapImported\\Rukia_E_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(O,1892)
call SetSoundChannel(O,0)
call SetSoundVolume(O,127)
call SetSoundPitch(O,1.0)
set l=CreateSound("war3mapImported\\Rukia_Q_ALT_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(l,710)
call SetSoundChannel(l,0)
call SetSoundVolume(l,127)
call SetSoundPitch(l,1.0)
set b=CreateSound("war3mapImported\\Rukia_Q_02.mp3",false,false,false,10,10,"")
call SetSoundDuration(b,2179)
call SetSoundChannel(b,0)
call SetSoundVolume(b,127)
call SetSoundPitch(b,1.0)
set y=CreateSound("war3mapImported\\Rukia_E_ALT_02.mp3",false,false,false,10,10,"")
call SetSoundDuration(y,1076)
call SetSoundChannel(y,0)
call SetSoundVolume(y,127)
call SetSoundPitch(y,1.0)
set p=CreateSound("war3mapImported\\Rukia_Q_ALT_02.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(p,727)
call SetSoundChannel(p,0)
call SetSoundVolume(p,127)
call SetSoundPitch(p,1.0)
set e=CreateSound("war3mapImported\\Zommari_Q_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(e,710)
call SetSoundChannel(e,0)
call SetSoundVolume(e,127)
call SetSoundPitch(e,1.0)
set q=CreateSound("war3mapImported\\Zommari_W_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(q,1362)
call SetSoundChannel(q,0)
call SetSoundVolume(q,127)
call SetSoundPitch(q,1.0)
set a=CreateSound("war3mapImported\\Zommari_E_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(a,1819)
call SetSoundChannel(a,0)
call SetSoundVolume(a,127)
call SetSoundPitch(a,1.0)
set n=CreateSound("war3mapImported\\Zommari_P_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(n,818)
call SetSoundChannel(n,0)
call SetSoundVolume(n,127)
call SetSoundPitch(n,1.0)
set d=CreateSound("war3mapImported\\Zommari_R_01.mp3",false,false,false,10,10,"")
call SetSoundDuration(d,1041)
call SetSoundChannel(d,0)
call SetSoundVolume(d,127)
call SetSoundPitch(d,1.0)
set w=Rect(-2048.0,9184.0,-1600.0,9568.0)
call Rect(-608.0,9184.0,-160.0,9568.0)
call Rect(-3296.0,7552.0,1280.0,11232.0)
call Rect(1088.0,-2944.0,1664.0,-2528.0)
call Rect(1216.0,4064.0,1888.0,4608.0)
call CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE),1144600889,-1152.0,9344.0,270.000)
call InitBlizzard()
call TimerStart(CreateTimer(),0.,false,Kt)
set rS=CreateTrigger()
call TriggerAddCondition(rS,Condition(Lt))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Xt))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Ct))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Vt))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Bt))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Nt))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Mt))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(wi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ui))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ri))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(si))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ti))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ii))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Si))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ci))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(oi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Oi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(li))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(bi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(yi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(pi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ei))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Fast.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(qi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ai))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ni))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Init.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(di))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_R.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(fi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_E.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Ri))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_E_ALT.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Ti))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_Q.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Yi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_Q_ALT.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Gi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_T.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(gi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_W_THIRD_DANCE.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(hi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_W.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(Fi))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Rukia_W_ALT.")
endif
call TriggerClearConditions(rS)
call TriggerAddCondition(rS,Condition(ki))
if not TriggerEvaluate(rS) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Zommari_Q.")
endif
call TriggerClearConditions(rS)
call DestroyTrigger(rS)
set rS=null
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_008")
call SetMapDescription("")
call SetPlayers(10)
call SetTeams(10)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,-4032.0,-3904.0)
call DefineStartLocation(1,5312.0,-640.0)
call DefineStartLocation(2,-896.0,-1792.0)
call DefineStartLocation(3,-1088.0,8192.0)
call DefineStartLocation(4,1856.0,-2048.0)
call DefineStartLocation(5,-896.0,9984.0)
call DefineStartLocation(6,3520.0,-704.0)
call DefineStartLocation(7,192.0,-2624.0)
call DefineStartLocation(8,1728.0,2496.0)
call DefineStartLocation(9,-2624.0,8192.0)
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(1),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(1),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(2),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(2),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(3),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(3),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(4),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(4),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(6),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(6),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(7),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(7),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(8),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(8),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_RESCUABLE)
call SetPlayerAlliance(Player(9),Player(0),ALLIANCE_RESCUABLE,true)
call SetPlayerAlliance(Player(9),Player(5),ALLIANCE_RESCUABLE,true)
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),1)
call SetPlayerTeam(Player(6),1)
call SetPlayerTeam(Player(7),1)
call SetPlayerTeam(Player(8),1)
call SetPlayerTeam(Player(9),1)
endfunction
